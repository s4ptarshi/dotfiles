#/bin/sh

# Use the "logo" key as the primary modifier
mod="Mod4"

#exit river
riverctl map normal $mod+Shift E exit
# Mod+P to launch rofi
riverctl map -repeat normal $mod P spawn "~/.config/rofi/launchers/misc/launcher.sh"

# Mod+S to take a screenshot
riverctl map normal $mod S spawn grim

# Mod+B to launch browser
riverctl map normal $mod B spawn firefox

#Mod+F to launch thunar
riverctl map normal $mod F spawn thunar

#screenshots
riverctl map normal None Print spawn 'grim ~/Pictures/screenshots/$(date +%Hh_%Mm_%Ss_%d_%B_%Y).png'
riverctl map normal Shift Print spawn 'grim | wl-copy'
riverctl map normal Control Print spawn 'grim -g "$(slurp)" ~/Pictures/screenshots/$(date +%Hh_%Mm_%Ss_%d_%B_%Y).png'
#riverctl map normal Control Shift Print 'grim -g "$(slurp)" | wl-copy'
riverctl map normal Mod1 Print spawn "grim -g "$(swaymsg -t get_tree | jq -r '.. | select(.focused?) | .rect | "\(.x),\(.y) \(.width)x\(.height)"')" ~/Pictures/screenshots/$(date +%Hh_%Mm_%Ss_%d_%B_%Y).png"
#riverctl map normal Mod1 Shift Print 'grim -g "$(swaymsg -t get_tree | jq -r '.. | select(.focused?) | .rect | "\(.x),\(.y) \(.width)x\(.height)"')" | wl-copy'

# Mod+escape to lockscreen
riverctl map normal $mod Escape spawn "swaylock -c ~/.config/swaylock/config"

 # Mod+T to start an instance of Terminal
riverctl map -repeat normal $mod T spawn 'kitty -e fish'

# Mod+Q to close the focused view
riverctl map -repeat normal $mod Q close

# Mod+Delete or Backspace to run wlogout
riverctl map normal $mod Backspace spawn "wlogout -p layer-shell"
# riverctl map normal $mod Delete spawn "wlogout -p layer-shell"
# Mod+Backslash to run Swaylock
riverctl map normal $mod Backslash spawn "source ~/.config/scripts/lock"

# Mod+Shift+E to exit river
riverctl map normal $mod+Shift E exit

# Mod+J and Mod+K to focus the next/previous view in the layout stack
riverctl map -repeat normal $mod J focus-view next
riverctl map -repeat normal $mod K focus-view previous

# Mod+Shift+J and Mod+Shift+K to swap the focused view with the next/previous
# view in the layout stack
riverctl map -repeat normal $mod+Shift J swap next
riverctl map -repeat normal $mod+Shift K swap previous

# Mod+Period and Mod+Comma to focus the next/previous output
riverctl map normal $mod Period focus-output next
riverctl map normal $mod Comma focus-output previous

# Mod+Shift+{Period,Comma} to send the focused view to the next/previous output
riverctl map normal $mod+Shift Period send-to-output next
riverctl map normal $mod+Shift Comma send-to-output previous

# Mod+Return to bump the focused view to the top of the layout stack
riverctl map normal $mod Space zoom

# Mod+H and Mod+L to decrease/increase the main ratio of rivercarro(1)
riverctl map -repeat normal $mod H send-layout-cmd rivercarro "main-ratio -0.05"
riverctl map -repeat normal $mod L send-layout-cmd rivercarro "main-ratio +0.05"

# Mod+Shift+H and Mod+Shift+L to increment/decrement the main count of rivercarro(1)
riverctl map normal $mod+Shift H send-layout-cmd rivercarro "main-count +1"
riverctl map normal $mod+Shift L send-layout-cmd rivercarro "main-count -1"

# Mod+Alt+{H,J,K,L} to move views
#riverctl map normal $mod+Mod1 H move left 100
#riverctl map normal $mod+Mod1 J move down 100
#riverctl map normal $mod+Mod1 K move up 100
#riverctl map normal $mod+Mod1 L move right 100

# Mod+Alt+Control+{H,J,K,L} to snap views to screen edges
#riverctl map normal $mod+Mod1+Control H snap left
#riverctl map normal $mod+Mod1+Control J snap down
#riverctl map normal $mod+Mod1+Control K snap up
#riverctl map normal $mod+Mod1+Control L snap right

# Mod+Shift+{H,J,K,L} to resize views
riverctl map normal $mod+Shift Left resize horizontal -100
riverctl map normal $mod+Shift Up resize vertical 100
riverctl map normal $mod+Shift Down resize vertical -100
riverctl map normal $mod+Shift Right resize horizontal 100

# Mod + Left Mouse Button to move views
riverctl map-pointer normal $mod BTN_LEFT move-view

# Mod + Right Mouse Button to resize views
riverctl map-pointer normal $mod BTN_RIGHT resize-view

for i in $(seq 1 9)
do
    tags=$((1 << ($i - 1)))

    # Mod+[1-9] to focus tag [0-8]
    riverctl map normal $mod $i set-focused-tags $tags

    # Mod+Shift+[1-9] to tag focused view with tag [0-8]
    riverctl map normal $mod+Shift $i set-view-tags $tags

    # Mod+Ctrl+[1-9] to toggle focus of tag [0-8]
    riverctl map normal $mod+Control $i toggle-focused-tags $tags

    # Mod+Shift+Ctrl+[1-9] to toggle tag [0-8] of focused view
    riverctl map normal $mod+Shift+Control $i toggle-view-tags $tags
done

# Mod+0 to focus all tags
# Mod+Shift+0 to tag focused view with all tags
all_tags=$(((1 << 32) - 1))
riverctl map normal $mod 0 set-focused-tags $all_tags
riverctl map normal $mod+Shift 0 set-view-tags $all_tags

# Mod+Tab to go to the previous tag
riverctl map -repeat normal $mod TAB focus-previous-tags

# Mod+Space to toggle float
riverctl map -repeat normal $mod G toggle-float


# Mod+M to toggle monocle
riverctl map normal $mod M send-layout-cmd rivercarro "main-location monocle"
# riverctl map normal $mod M toggle-fullscreen

# Mod+{Up,Right,Down,Left} to change layout orientation
riverctl map normal $mod Up    send-layout-cmd rivercarro "main-location top"
riverctl map normal $mod Right send-layout-cmd rivercarro "main-location right"
riverctl map normal $mod Down  send-layout-cmd rivercarro "main-location bottom"
riverctl map normal $mod Left  send-layout-cmd rivercarro "main-location left"


# Declare a passthrough mode. This mode has only a single mapping to return to
# normal mode. This makes it useful for testing a nested wayland compositor
riverctl declare-mode passthrough

# Mod+F11 to enter passthrough mode
riverctl map normal $mod F11 enter-mode passthrough

# Mod+F11 to return to normal mode
riverctl map passthrough $mod F11 enter-mode normal

# Various media key mapping examples for both normal and locked mode which do
# not have a modifier
for mode in normal locked
do 
    # Control pulse audio volume with pamixer (https://github.com/cdemoulins/pamixer) 
    riverctl map -repeat $mode None XF86AudioRaiseVolume  spawn 'pamixer -i 5' 
    riverctl map -repeat $mode None XF86AudioLowerVolume  spawn 'pamixer -d 5' 
    riverctl map -repeat $mode None XF86AudioMute         spawn 'pamixer --toggle-mute' 
    riverctl map -repeat $mode None XF86AudioMicMute spawn 'togglemic.sh' 
    #Control MPRIS aware media players with playerctl (https://github.com/altdesktop/playerctl) 
    riverctl map -repeat $mode None XF86AudioMedia spawn 'playerctl play-pause' 
    riverctl map -repeat $mode None XF86AudioPlay  spawn 'playerctl play-pause' 
    riverctl map -repeat $mode None XF86AudioPrev  spawn 'playerctl previous' 
    riverctl map -repeat $mode None XF86AudioNext  spawn 'playerctl next' 
    #Control screen backlight brighness with brightnessctl 
    riverctl map -repeat $mode None XF86MonBrightnessUp   spawn 'brightnessctl s +5%' 
    riverctl map -repeat $mode None XF86MonBrightnessDown spawn 'brightnessctl s 5%-'

    #keyboard brightness with brightnessctl
    riverctl map -repeat $mode None XF86KbdBrightnessUp   spawn 'brightnessctl -d asus::kbd_backlight s 1+'
    riverctl map -repeat $mode None XF86KbdBrightnessDown spawn 'brightnessctl -d asus::kbd_backlight s 1-'
done

# Set background and border color
riverctl background-color 0x002b36
riverctl border-color-focused 0x93a1a1
riverctl border-color-unfocused 0x586e75

# Set keyboard repeat rate
riverctl set-repeat 50 300

# Make certain views start floating
riverctl csd-filter-add app-id float
riverctl float-filter-add app-id float
riverctl float-filter-add app-id popup 
riverctl float-filter-add app-id swappy 
riverctl float-filter-add title "popup title with spaces"
riverctl float-filter-add title "Picture-in-Picture"
riverctl float-filter-add title "rofi*"

## Autostart
riverctl spawn "waybar"
# Allows GUI programs to be run as root
riverctl spawn "/usr/libexec/polkit-gnome-authentication-agent-1 &"

#for screensharing
riverctl spawn "export XDG_CURRENT_DESKTOP=river"
riverctl spawn "systemctl --user import-environment WAYLAND_DISPLAY XDG_CURRENT_DESKTOP"
#gtk theming
riverctl spawn import-gsettings.sh
#wallpaper
riverctl spawn "swaybg -i Pictures/wallpapers/mirror\ between\ hills.png"
#for mounting
riverctl spawn "thunar --daemon"
#applets
riverctl spawn "nm-applet --indicator"
riverctl spawn "blueman-applet"
#notifications
riverctl spawn mako

# Sets Touchpad settings
TOUCHPAD=1267:12440:ELAN1201:00_04F3:3098_Touchpad
if [ ! -z "$TOUCHPAD" ]; then
	riverctl input $TOUCHPAD natural-scroll enabled
	riverctl input $TOUCHPAD tap enabled
    riverctl input $TOUCHPAD accel-profile adaptive 
fi

# River will send the process group of the init executable SIGTERM on exit.
riverctl default-layout rivercarro
# rivertile -view-padding 2 -outer-padding 2 &
exec rivercarro -inner-gaps 2 -outer-gaps 2 -main-ratio 0.5
